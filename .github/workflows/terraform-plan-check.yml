name: Terraform Plan Analysis

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Parse Terraform Plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.8


    - name: Terraform Init
      run: terraform init
      working-directory: ./example/terraform

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      working-directory: ./example/terraform

    - name: Parse Terraform Plan
      id: parse
      uses: ./
      with:
        terraform-plan: ${{ steps.plan.outputs.stdout }}
        ignore-resources: '["null_resource.ignored_resource"]'

    - name: Display Results
      run: |
        echo "Diff bool: ${{ steps.parse.outputs.diff-bool }}"
        echo "Diff count: ${{ steps.parse.outputs.diff-count }}"
        echo "Diff resources: ${{ steps.parse.outputs.diff-resources }}"
        echo "Diff JSON:"
        echo '${{ steps.parse.outputs.diff-json }}'
        echo "Diff raw:"
        echo '${{ steps.parse.outputs.diff-raw }}'

    - name: Extract values with jq
      id: extract-jq
      run: |
        DIFF_JSON='${{ steps.parse.outputs.diff-json }}'
        TOTAL_CHANGES=$(echo "$DIFF_JSON" | jq -r '.summary.totalChanges')
        TO_ADD=$(echo "$DIFF_JSON" | jq -r '.summary.toAdd')
        TO_CHANGE=$(echo "$DIFF_JSON" | jq -r '.summary.toChange')
        TO_DESTROY=$(echo "$DIFF_JSON" | jq -r '.summary.toDestroy')
        RESOURCE_COUNT=$(echo "$DIFF_JSON" | jq -r '.resourceCount')

        echo "total-changes=$TOTAL_CHANGES" >> $GITHUB_OUTPUT
        echo "to-add=$TO_ADD" >> $GITHUB_OUTPUT
        echo "to-change=$TO_CHANGE" >> $GITHUB_OUTPUT
        echo "to-destroy=$TO_DESTROY" >> $GITHUB_OUTPUT
        echo "resource-count=$RESOURCE_COUNT" >> $GITHUB_OUTPUT

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        DIFF_JSON: ${{ steps.parse.outputs.diff-json }}
      with:
        script: |
          const diffBool = '${{ steps.parse.outputs.diff-bool }}';
          const diffCount = '${{ steps.parse.outputs.diff-count }}';
          const resources = JSON.parse('${{ steps.parse.outputs.diff-resources }}');
          const totalChanges = '${{ steps.extract-jq.outputs.total-changes }}';
          const toAdd = '${{ steps.extract-jq.outputs.to-add }}';
          const toChange = '${{ steps.extract-jq.outputs.to-change }}';
          const toDestroy = '${{ steps.extract-jq.outputs.to-destroy }}';
          const resourceCount = '${{ steps.extract-jq.outputs.resource-count }}';

          let diffJson;
          try {
            diffJson = JSON.parse(process.env.DIFF_JSON);
          } catch (e) {
            console.log('Failed to parse diff-json:', e);
            diffJson = { summary: { toAdd: 0, toChange: 0, toDestroy: 0, totalChanges: 0 }, resources: [] };
          }

          let body = `## Terraform Plan Analysis (${totalChanges} total changes via jq)\n\n`;

          if (diffBool === 'true') {
            body += `‚úÖ **Changes detected** affecting ${diffCount} resources:\n\n`;

            // Original Changed Resources section
            body += '### Changed Resources\n```\n';
            for (const resource of resources) {
              body += `${resource}\n`;
            }
            body += '```\n\n';

            // Plan Summary
            body += `**Plan Summary**: ${toAdd} to add, ${toChange} to change, ${toDestroy} to destroy\n\n`;

            // Detailed resource changes from diff-json
            body += '### Detailed Resource Changes\n';
            for (const resource of diffJson.resources) {
              const actionEmoji = {
                'create': '‚ûï',
                'update': 'üîÑ',
                'delete': '‚ùå',
                'replace': 'üîÑ'
              }[resource.action] || 'üîÑ';

              body += `${actionEmoji} **${resource.action.toUpperCase()}**: \`${resource.address}\` (${resource.resourceType})\n`;
              body += `   - ${resource.changes.description}\n\n`;
            }
          } else {
            body += '‚úÖ **No changes detected**\n\n';
          }

          body += '---\n*Generated by Terraform Plan Parser*';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
